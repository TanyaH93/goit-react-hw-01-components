{"version":3,"sources":["components/ProfileComponent/Profiles/Profiles.module.css","components/StatsComponent/Stats/Stats.module.css","components/FriendListComponent/FriendOne/FriendOne.module.css","components/TransactionHistoryComponent/TransactionOne/TransactionOne.module.css","components/TransactionHistoryComponent/TransactionHistory/TransactionHistory.module.css","components/FriendListComponent/FriendList/FriendList.module.css","components/ProfileComponent/Profiles/Profiles.js","userData.js","components/Helpers/Helpers.js","components/StatsComponent/Stats/Stats.js","components/FriendListComponent/FriendOne/FriendOne.js","components/FriendListComponent/FriendList/FriendList.js","components/TransactionHistoryComponent/TransactionOne/TransactionOne.js","components/TransactionHistoryComponent/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","avatar","alt","name","tag","location","stats","followers","views","likes","className","styles","profile","container","src","statsItem","defaultProps","PropTypes","shape","randomColor","Math","floor","random","toString","Stats","title","css","statistics","statisticsList","map","item","key","id","style","backgroundColor","label","percentage","FriendOne","isOnline","statusClasses","online","offline","width","FriendList","friends","friendsListSec","friend","TransactionOne","items","tData","type","amount","currency","TransactionHistory","transactionHistory","tHead","tRow","from","transactions","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40ca771.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profiles_container__3HEm0\",\"profile\":\"Profiles_profile__1fVJi\",\"avatar\":\"Profiles_avatar__RqLOO\",\"stats\":\"Profiles_stats__GydFp\",\"statsItem\":\"Profiles_statsItem__2u5in\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Stats_statistics__1t7uf\",\"title\":\"Stats_title__3Z1Bf\",\"statisticsList\":\"Stats_statisticsList__DX80m\",\"item\":\"Stats_item__2fEe5\",\"label\":\"Stats_label__qiiX9\",\"percentage\":\"Stats_percentage__2fg9L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendOne_item__oUL9S\",\"online\":\"FriendOne_online__1b-gk\",\"offline\":\"FriendOne_offline__18-Ng\",\"avatar\":\"FriendOne_avatar__28agW\",\"name\":\"FriendOne_name__PSDDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tData\":\"TransactionOne_tData__3GL1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1229I\",\"tHead\":\"TransactionHistory_tHead__1b88G\",\"tRow\":\"TransactionHistory_tRow__35qNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsListSec\":\"FriendList_friendsListSec__1awSg\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profiles.module.css';\r\n\r\nconst Profile = ({ user }) => {\r\n  const {\r\n    avatar,\r\n    alt,\r\n    name,\r\n    tag,\r\n    location,\r\n    stats: { followers, views, likes },\r\n  } = user;\r\n  return (\r\n    <div className={`${styles.profile} ${styles.container}`}>\r\n      <div className=\"description\">\r\n        <img className={styles.avatar} src={avatar} alt={alt} />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{followers}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  user: PropTypes.shape({\r\n    alt: 'user avatar',\r\n  }),\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","export default {\r\n  name: 'Jacques Gluke',\r\n  tag: 'jgluke',\r\n  location: 'Ocho Rios, Jamaica',\r\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\r\n  stats: {\r\n    followers: 5603,\r\n    views: 4827,\r\n    likes: 1308,\r\n  },\r\n};\r\n","const randomColor = () => Math.floor(Math.random() * 12345678).toString(16);\r\n\r\nexport default randomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Stats.module.css';\r\nimport randomColor from '../../Helpers/Helpers';\r\n\r\nconst Stats = ({ title, stats }) => (\r\n  <section className={css.statistics}>\r\n    {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n    <ul className={css.statisticsList}>\r\n      {stats.map(stats => (\r\n        <li\r\n          className={css.item}\r\n          key={stats.id}\r\n          style={{ backgroundColor: '#' + randomColor() }}\r\n        >\r\n          <span className={css.label}>{stats.label}</span>\r\n          <span className={css.percentage}>{stats.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStats.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nStats.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FriendOne.module.css';\r\n\r\nconst FriendOne = ({ name, avatar, isOnline }) => {\r\n  const statusClasses = isOnline ? css.online : css.offline;\r\n  return (\r\n    <li className={css.item}>\r\n      <span className={statusClasses}>{isOnline}</span>\r\n      <img className={css.avatar} src={avatar} alt={name} width=\"58\" />\r\n      <p className={css.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\nFriendOne.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendOne;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendOne from '../FriendOne/FriendOne';\r\nimport css from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={css.friendsListSec}>\r\n      {friends.map(friend => (\r\n        <FriendOne\r\n          name={friend.name}\r\n          avatar={friend.avatar}\r\n          isOnline={friend.isOnline}\r\n          key={friend.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './TransactionOne.module.css';\r\n\r\nconst TransactionOne = ({ items = [] }) =>\r\n  items.map(item => (\r\n    <tr key={item.id}>\r\n      <td className={css.tData}>{item.type}</td>\r\n      <td className={css.tData}>{item.amount}</td>\r\n      <td className={css.tData}>{item.currency}</td>\r\n    </tr>\r\n  ));\r\n\r\nTransactionOne.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionOne;\r\n","import React from 'react';\r\nimport transactions from '../../../transactions.json';\r\nimport TransactionOne from '../TransactionOne/TransactionOne';\r\nimport css from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = () => (\r\n  <table className={css.transactionHistory}>\r\n    <thead className={css.tHead}>\r\n      <tr className={css.tRow}>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      <TransactionOne from items={transactions} />\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport ProfileComponent from './ProfileComponent/Profiles/Profiles';\r\nimport user from '../userData';\r\nimport StatsComponent from './StatsComponent/Stats/Stats';\r\nimport FriendListComponent from './FriendListComponent/FriendList/FriendList';\r\nimport TransactionHistoryComponent from './TransactionHistoryComponent/TransactionHistory/TransactionHistory';\r\n\r\nimport stats from '../stats.json';\r\nimport friends from '../friends.json';\r\nimport transactions from '../transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ProfileComponent user={user} />\r\n      <StatsComponent title=\"Upload stats\" stats={stats} />\r\n      <FriendListComponent friends={friends} />\r\n      <TransactionHistoryComponent transactions={transactions} />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}