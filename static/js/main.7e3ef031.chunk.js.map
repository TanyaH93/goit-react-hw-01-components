{"version":3,"sources":["components/ProfileComponent/ProfileOne/ProfileOne.module.css","components/FriendListComponent/FriendOne/FriendOne.module.css","components/TransactionHistoryComponent/TransactionOne/TransactionOne.module.css","components/StatsComponent/StatOne/StatOne.module.css","components/StatsComponent/Stats/Stats.module.css","components/ProfileComponent/Profiles/Profiles.module.css","components/FriendListComponent/FriendList/FriendList.module.css","components/TransactionHistoryComponent/TransactionHistory/TransactionHistory.module.css","components/ProfileComponent/ProfileOne/ProfileOne.js","userData.js","components/ProfileComponent/Profiles/Profiles.js","components/StatsComponent/StatOne/StatOne.js","components/StatsComponent/Stats/Stats.js","components/FriendListComponent/FriendOne/FriendOne.js","components/FriendListComponent/FriendList/FriendList.js","components/TransactionHistoryComponent/TransactionOne/TransactionOne.js","components/TransactionHistoryComponent/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","ProfileOne","user","className","css","profile","description","src","avatar","alt","name","tag","location","stats","statsItem","label","quantity","followers","views","likes","Profiles","profiles","randColor","color","i","Math","floor","random","StatOne","statsList","map","stat","key","id","style","backgroundColor","item","percentage","Stats","title","statsSection","defaultProps","FriendOne","friends","friendList","friend","friendItem","isOnline","green","red","width","FriendList","friendsListSec","TransactionOne","transactions","transactionHistory","headTable","headRow","bodyTable","transaction","bodyRow","type","amount","currency","TransactionHistory","transactionsSection","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e3ef031.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileOne_profile__24iTR\",\"description\":\"ProfileOne_description__2qXk3\",\"avatar\":\"ProfileOne_avatar__2ws5w\",\"name\":\"ProfileOne_name__3t1yt\",\"tag\":\"ProfileOne_tag__y_hzs\",\"location\":\"ProfileOne_location__G4ytH\",\"stats\":\"ProfileOne_stats__38XoM\",\"statsItem\":\"ProfileOne_statsItem__3_64B\",\"label\":\"ProfileOne_label__Thxi2\",\"quantity\":\"ProfileOne_quantity__11nu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendOne_friendList__2A5fN\",\"friendItem\":\"FriendOne_friendItem__1mpeJ\",\"green\":\"FriendOne_green__RMZOB\",\"red\":\"FriendOne_red__1L45D\",\"avatar\":\"FriendOne_avatar__1L9ft\",\"name\":\"FriendOne_name__3XqU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionOne_transactionHistory__12MqD\",\"headTable\":\"TransactionOne_headTable__DbCQR\",\"headRow\":\"TransactionOne_headRow__2L7SO\",\"bodyTable\":\"TransactionOne_bodyTable__3lvUU\",\"bodyRow\":\"TransactionOne_bodyRow__12LEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"StatOne_statsList__CVH9R\",\"item\":\"StatOne_item__oljZK\",\"label\":\"StatOne_label__3gnCf\",\"percentage\":\"StatOne_percentage__f2wLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__gFW9G\",\"title\":\"Stats_title__pDsQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profiles\":\"Profiles_profiles__1JrOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsListSec\":\"FriendList_friendsListSec__3xQEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsSection\":\"TransactionHistory_transactionsSection__1uKDH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ProfileOne.module.css';\n\nconst ProfileOne = ({ user }) => {\n  return (\n    <div className={css.profile}>\n      <div className={css.description}>\n        <img src={user.avatar} alt=\"user avatar\" className={css.avatar} />\n        <p className={css.name}>{user.name}</p>\n        <p className={css.tag}>@{user.tag}</p>\n        <p className={css.location}>{user.location}</p>\n      </div>\n\n      <ul className={css.stats}>\n        <li className={css.statsItem}>\n          <span className={css.label}>Followers</span>\n          <span className={css.quantity}>{user.stats.followers}</span>\n        </li>\n        <li className={css.statsItem}>\n          <span className={css.label}>Views</span>\n          <span className={css.quantity}>{user.stats.views}</span>\n        </li>\n        <li className={css.statsItem}>\n          <span className={css.label}>Likes</span>\n          <span className={css.quantity}>{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfileOne.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProfileOne;\n","export default {\n  name: 'Jacques Gluke',\n  tag: 'jgluke',\n  location: 'Ocho Rios, Jamaica',\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n  stats: {\n    followers: 5603,\n    views: 4827,\n    likes: 1308,\n  },\n};\n","import React from 'react';\nimport Profile from '../ProfileOne/ProfileOne';\nimport user from '../../../userData';\nimport css from './Profiles.module.css';\n\nconst Profiles = () => {\n  return (\n    <section className={css.profiles}>\n      <Profile user={user} />\n    </section>\n  );\n};\n\nexport default Profiles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './StatOne.module.css';\n\nconst randColor = function randomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst StatOne = ({ stats }) => {\n  return (\n    <>\n      <ul className={css.statsList}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            style={{ backgroundColor: randColor() }}\n            className={css.item}\n          >\n            <span className={css.label}>{stat.label}</span>\n            <span className={css.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nStatOne.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default StatOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatOne from '../StatOne/StatOne';\nimport css from './Stats.module.css';\n\nconst Stats = ({ title, stats }) => {\n  return (\n    <section className={css.statsSection}>\n      <h2 className={css.title}>{title}</h2>\n      <StatOne stats={stats} />\n    </section>\n  );\n};\n\nStats.defaultProps = {\n  title: '',\n};\n\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './FriendOne.module.css';\n\nconst FriendOne = ({ friends }) => {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <li key={friend.id} className={css.friendItem}>\n          <span className={friend.isOnline ? css.green : css.red} />\n\n          <img\n            className={css.avatar}\n            src={friend.avatar}\n            alt={friend.name}\n            width=\"48\"\n          />\n          <p className={css.name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendOne.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\nimport FriendOne from '../FriendOne/FriendOne';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <section className={css.friendsListSec}>\n      <FriendOne friends={friends} />\n    </section>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './TransactionOne.module.css';\n\nconst TransactionOne = ({ transactions }) => {\n  return (\n    <table className={css.transactionHistory}>\n      <thead className={css.headTable}>\n        <tr className={css.headRow}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={css.bodyTable}>\n        {transactions.map(transaction => (\n          <tr className={css.bodyRow} key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionOne.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionOne from '../TransactionOne/TransactionOne';\nimport css from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <section className={css.transactionsSection}>\n      <TransactionOne transactions={transactions} />\n    </section>\n  );\n};\n\nTransactionHistory.defaultProps = {\n  transactions: [],\n};\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape()),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport ProfileComponent from './ProfileComponent/Profiles/Profiles';\nimport StatsComponent from './StatsComponent/Stats/Stats';\nimport FriendListComponent from './FriendListComponent/FriendList/FriendList';\nimport TransactionHistoryComponent from './TransactionHistoryComponent/TransactionHistory/TransactionHistory';\n\nimport stats from '../stats.json';\nimport friends from '../friends.json';\nimport transactions from '../transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <ProfileComponent />\n      <StatsComponent title=\"Upload stats\" stats={stats} />\n      <FriendListComponent friends={friends} />\n      <TransactionHistoryComponent transactions={transactions} />\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}